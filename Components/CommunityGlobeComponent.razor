@using Microsoft.AspNetCore.Components
@using ZealousMindedPeopleGeo.Models
@using ZealousMindedPeopleGeo.Services.Mapping
@using ZealousMindedPeopleGeo.Services.Repositories
@implements IDisposable

<div class="community-globe-container">
    <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è 3D –≥–ª–æ–±—É—Å–∞ -->
    <div id="@ContainerId" class="globe-canvas-container"
         style="width: @(Width)px; height: @(Height)px;">

        <!-- –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ -->
        @if (_isInitializing)
        {
            <div class="globe-loading-overlay">
                <div class="loading-spinner"></div>
                <div class="loading-text">–ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–æ–±—É—Å–∞</div>
            </div>
        }

        <!-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ -->
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <div class="globe-error-overlay">
                <div class="error-icon">‚ö†Ô∏è</div>
                <div class="error-message">@_errorMessage</div>
                <button class="retry-button" @onclick="RetryInitializationAsync">
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                </button>
            </div>
        }
    </div>

    <!-- –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–æ–±—É—Å–æ–º -->
    @if (_isInitialized && ShowControls)
    {
        <div class="globe-controls">
            <div class="control-group">
                <label class="control-label">–í—Ä–∞—â–µ–Ω–∏–µ:</label>
                <button class="control-button @(_isAutoRotating ? "active" : "")"
                        @onclick="ToggleRotationAsync"
                        title="–í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–æ–≤–æ—Ä–æ—Ç">
                    üîÑ
                </button>
            </div>

            <div class="control-group">
                <label class="control-label">–£—á–∞—Å—Ç–Ω–∏–∫–∏:</label>
                <span class="participant-count">@_participantCount</span>
            </div>

            <div class="control-group">
                <label class="control-label">–°—Ç—Ä–∞–Ω—ã:</label>
                <span class="country-count">@_countryCount</span>
            </div>

            <div class="control-group">
                <label class="control-label">–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</label>
                <select class="control-select" @bind="_currentLod" @bind:event="oninput">
                    <option value="0">–ù–∏–∑–∫–∞—è</option>
                    <option value="1">–°—Ä–µ–¥–Ω—è—è</option>
                    <option value="2">–í—ã—Å–æ–∫–∞—è</option>
                    <option value="3">–£–ª—å—Ç—Ä–∞</option>
                </select>
            </div>

            <div class="control-group">
                <button class="control-button"
                        @onclick="RefreshDataAsync"
                        title="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ">
                    üîÑ
                </button>
                <button class="control-button"
                        @onclick="CenterOnUserAsync"
                        title="–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ">
                    üéØ
                </button>
            </div>
        </div>
    }

    <!-- –ü–∞–Ω–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ -->
    @if (_isInitialized && ShowParticipantManagement)
    {
        <div class="participant-management-panel">
            <div class="panel-header">
                <h3>üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏</h3>
                <button class="panel-toggle" @onclick="ToggleParticipantPanel">
                    @(_isParticipantPanelCollapsed ? "‚ñº" : "‚ñ≤")
                </button>
            </div>

            @if (!_isParticipantPanelCollapsed)
            {
                <div class="panel-content">
                    <!-- –§–æ—Ä–º–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞ -->
                    <div class="participant-form">

                        <div class="form-row">
                            <div class="form-group">
                                <label for="participant-name">–ò–º—è:</label>
                                <InputText id="participant-name" @bind-Value="_newParticipant.Name"
                                           placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞" class="form-input" />

                            </div>

                            <div class="form-group">
                                <label for="participant-latitude">–®–∏—Ä–æ—Ç–∞:</label>
                                <InputNumber id="participant-latitude" @bind-Value="_newParticipant.Latitude"
                                             placeholder="55.7558" step="0.0001" class="form-input" />

                            </div>

                            <div class="form-group">
                                <label for="participant-longitude">–î–æ–ª–≥–æ—Ç–∞:</label>
                                <InputNumber id="participant-longitude" @bind-Value="_newParticipant.Longitude"
                                             placeholder="37.6173" step="0.0001" class="form-input" />

                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn btn-success" @onclick="AddParticipantAsync" disabled="@_isAddingParticipant">
                                @if (_isAddingParticipant)
                                {
                                    <span>‚è≥ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...</span>
                                }
                                else
                                {
                                    <span>‚úÖ –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞</span>
                                }
                            </button>
                            <button type="button" class="btn btn-secondary" @onclick="ClearParticipantForm">
                                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
                            </button>
                            <button type="button" class="btn btn-info" @onclick="CenterOnFormCoordinates">
                                üéØ –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å
                            </button>
                        </div>
                    </div>

                    <!-- –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ -->
                    <div class="quick-add-section">
                        <h4>‚ö° –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ:</h4>
                        <div class="quick-add-buttons">
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–ú–æ—Å–∫–≤–∞", 55.7558, 37.6173))">
                                üèõÔ∏è –ú–æ—Å–∫–≤–∞
                            </button>
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–°–ü–±", 59.9343, 30.3351))">
                                üèõÔ∏è –°–ü–±
                            </button>
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", 55.0084, 82.9357))">
                                üèõÔ∏è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
                            </button>
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.8389, 60.6057))">
                                üèõÔ∏è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
                            </button>
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–ö–∞–∑–∞–Ω—å", 55.7961, 49.1064))">
                                üèõÔ∏è –ö–∞–∑–∞–Ω—å
                            </button>
                            <button class="quick-btn" @onclick="@(() => AddQuickParticipantAsync("–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", 45.0355, 38.9753))">
                                üèõÔ∏è –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä
                            </button>
                            <button class="quick-btn" @onclick="() => AddRandomParticipantAsync()">
                                üé≤ –°–ª—É—á–∞–π–Ω—ã–π
                            </button>
                        </div>
                    </div>

                    <!-- –£–¥–∞–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ -->
                    <div class="remove-section">
                        <h4>üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞:</h4>
                        <div class="form-row">
                            <div class="form-group">
                                <label for="remove-participant-id">ID —É—á–∞—Å—Ç–Ω–∏–∫–∞:</label>
                                <InputNumber id="remove-participant-id" @bind-Value="_participantIdToRemove"
                                             placeholder="–í–≤–µ–¥–∏—Ç–µ ID" class="form-input" />
                            </div>
                            <div class="form-group">
                                <button class="btn btn-danger" @onclick="RemoveParticipantAsync" disabled="@_isRemovingParticipant">
                                    @if (_isRemovingParticipant)
                                    {
                                        <span>‚è≥ –£–¥–∞–ª–µ–Ω–∏–µ...</span>
                                    }
                                    else
                                    {
                                        <span>‚ùå –£–¥–∞–ª–∏—Ç—å</span>
                                    }
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ -->
            @if (!string.IsNullOrEmpty(_operationMessage))
            {
                <div class="operation-status @(string.IsNullOrEmpty(_operationError) ? "success" : "error")">
                    @if (string.IsNullOrEmpty(_operationError))
                    {
                        <span>‚úÖ @_operationMessage</span>
                    }
                    else
                    {
                        <span>‚ùå @_operationMessage</span>
                    }
                </div>
            }
        </div>
    }

    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö -->
    @if (_isInitialized && ShowParticipantInfo && _selectedParticipant != null)
    {
        <div class="participant-info-panel">
            <div class="participant-info-header">
                <h4>@_selectedParticipant.Name</h4>
                <button class="close-button" @onclick="CloseParticipantInfo">√ó</button>
            </div>
            <div class="participant-info-content">
                <div class="participant-detail">
                    <strong>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong>
                    <span>@_selectedParticipant.City, @_selectedParticipant.Country</span>
                </div>
                <div class="participant-detail">
                    <strong>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong>
                    <span>@(_selectedParticipant.Latitude?.ToString("F4") ?? "N/A"), @(_selectedParticipant.Longitude?.ToString("F4") ?? "N/A")</span>
                </div>
                @if (!string.IsNullOrEmpty(_selectedParticipant.Message))
                {
                    <div class="participant-detail">
                        <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong>
                        <span>@_selectedParticipant.Message</span>
                    </div>
                }
                <div class="participant-detail">
                    <strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong>
                    <span>@_selectedParticipant.RegisteredAt.ToString("g")</span>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .community-globe-container {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }

    .globe-canvas-container {
        position: relative;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        background: linear-gradient(135deg, #0f0f23, #1a1a2e);
    }

    .globe-loading-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: rgba(0, 0, 0, 0.7);
        backdrop-filter: blur(2px);
    }

    .loading-spinner {
        width: 40px;
        height: 40px;
        border: 3px solid #333;
        border-top: 3px solid #00aaff;
        border-radius: 50%;
        animation: spin 1s linear infinite;
        margin-bottom: 1rem;
    }

    @@keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .loading-text {
        color: #fff;
        font-size: 0.9rem;
    }

    .globe-error-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: rgba(0, 0, 0, 0.8);
        text-align: center;
        padding: 2rem;
    }

    .error-icon {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    .error-message {
        color: #ff6b6b;
        margin-bottom: 1.5rem;
        max-width: 300px;
    }

    .retry-button {
        background: #00aaff;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.9rem;
    }

        .retry-button:hover {
            background: #0088cc;
        }

    .globe-controls {
        display: flex;
        gap: 1rem;
        align-items: center;
        padding: 0.5rem;
        background: rgba(0, 0, 0, 0.5);
        border-radius: 8px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .control-group {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .control-label {
        color: #fff;
        font-size: 0.8rem;
        white-space: nowrap;
    }

    .control-button {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        padding: 0.25rem 0.5rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.8rem;
        transition: all 0.2s ease;
    }

        .control-button:hover {
            background: rgba(255, 255, 255, 0.2);
        }

        .control-button.active {
            background: #00aaff;
            border-color: #00aaff;
        }

    .control-select {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        padding: 0.25rem;
        border-radius: 4px;
        font-size: 0.8rem;
    }

    .participant-count,
    .country-count {
        color: #00aaff;
        font-weight: bold;
        font-size: 0.8rem;
    }

    .participant-info-panel {
        position: absolute;
        top: 10px;
        right: 10px;
        background: rgba(0, 0, 0, 0.9);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        padding: 1rem;
        max-width: 300px;
        backdrop-filter: blur(10px);
    }

    .participant-info-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.5rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        padding-bottom: 0.5rem;
    }

        .participant-info-header h4 {
            color: #00aaff;
            margin: 0;
            font-size: 1rem;
        }

    .close-button {
        background: none;
        border: none;
        color: #fff;
        cursor: pointer;
        font-size: 1.2rem;
        padding: 0;
        width: 20px;
        height: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .close-button:hover {
            color: #ff6b6b;
        }

    .participant-detail {
        margin-bottom: 0.5rem;
        font-size: 0.8rem;
    }

        .participant-detail strong {
            color: #aaa;
            display: inline-block;
            min-width: 80px;
        }

        .participant-detail span {
            color: #fff;
        }

    /* –°—Ç–∏–ª–∏ –¥–ª—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ */
    .participant-management-panel {
        background: rgba(0, 0, 0, 0.8);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        margin: 1rem 0;
        backdrop-filter: blur(10px);
    }

    .panel-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        cursor: pointer;
        user-select: none;
    }

        .panel-header:hover {
            background: rgba(255, 255, 255, 0.05);
        }

        .panel-header h3 {
            color: #00aaff;
            margin: 0;
            font-size: 1rem;
        }

    .panel-toggle {
        background: none;
        border: none;
        color: #fff;
        font-size: 1rem;
        cursor: pointer;
        padding: 0.25rem;
        border-radius: 4px;
        transition: background 0.2s ease;
    }

        .panel-toggle:hover {
            background: rgba(255, 255, 255, 0.1);
        }

    .panel-content {
        padding: 1rem;
    }

    .participant-form {
        margin-bottom: 1.5rem;
    }

    .form-row {
        display: grid;
        grid-template-columns: 2fr 1fr 1fr;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .form-group {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        .form-group label {
            color: #fff;
            font-size: 0.8rem;
            font-weight: bold;
        }

    .form-input {
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        color: #fff;
        padding: 0.5rem;
        border-radius: 4px;
        font-size: 0.9rem;
    }

        .form-input:focus {
            outline: none;
            border-color: #00aaff;
            background: rgba(255, 255, 255, 0.2);
        }

        .form-input::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }

    .form-actions {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .btn {
        background: #00aaff;
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        font-size: 0.8rem;
        font-weight: bold;
        transition: background 0.2s ease;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

        .btn:hover:not(:disabled) {
            background: #0088cc;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    .btn-success {
        background: #28a745;
    }

        .btn-success:hover:not(:disabled) {
            background: #218838;
        }

    .btn-secondary {
        background: #6c757d;
    }

        .btn-secondary:hover:not(:disabled) {
            background: #5a6268;
        }

    .btn-info {
        background: #17a2b8;
    }

        .btn-info:hover:not(:disabled) {
            background: #138496;
        }

    .btn-danger {
        background: #dc3545;
    }

        .btn-danger:hover:not(:disabled) {
            background: #c82333;
        }

    .quick-add-section {
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        padding-top: 1rem;
        margin-top: 1rem;
    }

        .quick-add-section h4 {
            color: #fff;
            margin: 0 0 0.5rem 0;
            font-size: 0.9rem;
        }

    .quick-add-buttons {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
        gap: 0.5rem;
    }

    .quick-btn {
        background: rgba(0, 170, 255, 0.2);
        border: 1px solid rgba(0, 170, 255, 0.5);
        color: #fff;
        padding: 0.5rem;
        border-radius: 4px;
        font-size: 0.7rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .quick-btn:hover {
            background: rgba(0, 170, 255, 0.3);
            transform: translateY(-1px);
        }

    .remove-section {
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        padding-top: 1rem;
        margin-top: 1rem;
    }

        .remove-section h4 {
            color: #fff;
            margin: 0 0 0.5rem 0;
            font-size: 0.9rem;
        }

    .operation-status {
        margin-top: 1rem;
        padding: 0.75rem;
        border-radius: 4px;
        font-size: 0.8rem;
        text-align: center;
        font-weight: bold;
    }

        .operation-status.success {
            background: rgba(40, 167, 69, 0.2);
            border: 1px solid #28a745;
            color: #28a745;
        }

        .operation-status.error {
            background: rgba(220, 53, 69, 0.2);
            border: 1px solid #dc3545;
            color: #dc3545;
        }
</style>