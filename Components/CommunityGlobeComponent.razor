@using Microsoft.AspNetCore.Components
@using ZealousMindedPeopleGeo.Models
@using ZealousMindedPeopleGeo.Services.Mapping
@using ZealousMindedPeopleGeo.Services.Repositories
@implements IDisposable


<HeadContent>
    <link href="/_content/ZealousMindedPeopleGeo/css/community-globe.css" rel="stylesheet" />
</HeadContent>

<div class="d-flex flex-column align-items-center gap-3">
    <div id="@ContainerId" class="globe-canvas-container"
         style="width: @(Width)px; height: @(Height)px;">

        @if (_isInitializing)
        {
            <div class="globe-loading-overlay text-white text-center">
                <div class="loading-spinner mb-3"></div>
                <div>–ó–∞–≥—Ä—É–∑–∫–∞ –≥–ª–æ–±—É—Å–∞</div>
            </div>
        }

        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <div class="globe-error-overlay text-center p-4">
                <div class="fs-1 mb-3">‚ö†Ô∏è</div>
                <div class="text-danger mb-3">@_errorMessage</div>
                <button class="btn btn-primary" @onclick="RetryInitializationAsync">
                    –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
                </button>
            </div>
        }
    </div>

    @if (_isInitialized && ShowControls)
    {
        <div class="globe-controls d-flex gap-3 align-items-center p-2 rounded text-white">
            <div class="d-flex align-items-center gap-2">
                <small>–í—Ä–∞—â–µ–Ω–∏–µ:</small>
                <button class="btn btn-sm @(_isAutoRotating ? "btn-info" : "btn-outline-light")"
                        @onclick="ToggleRotationAsync">
                    üîÑ
                </button>
            </div>

            <div class="d-flex align-items-center gap-2">
                <small>–£—á–∞—Å—Ç–Ω–∏–∫–∏:</small>
                <span class="badge bg-info">@_participantCount</span>
            </div>

            <div class="d-flex align-items-center gap-2">
                <small>–î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è:</small>
                <select class="form-select form-select-sm" @bind="_currentLod" style="width: auto;">
                    <option value="0">–ù–∏–∑–∫–∞—è</option>
                    <option value="1">–°—Ä–µ–¥–Ω—è—è</option>
                    <option value="2">–í—ã—Å–æ–∫–∞—è</option>
                    <option value="3">–£–ª—å—Ç—Ä–∞</option>
                </select>
            </div>

            <div class="d-flex gap-2">
                <button class="btn btn-sm btn-outline-light" @onclick="RefreshDataAsync" title="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ">
                    üîÑ
                </button>
                <button class="btn btn-sm btn-outline-light" @onclick="CenterOnUserAsync" title="–¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å">
                    üéØ
                </button>
            </div>
        </div>
    }

    <!-- –ü–∞–Ω–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ -->
    @if (_isInitialized && ShowParticipantManagement)
    {
        <div class="participant-management-panel">
            <div class="panel-header">
                <h3>üë§ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏</h3>
                <button class="panel-toggle" @onclick="ToggleParticipantPanel">
                    @(_isParticipantPanelCollapsed ? "‚ñº" : "‚ñ≤")
                </button>
            </div>

            @if (!_isParticipantPanelCollapsed)
            {
                <div class="panel-content">
                    <div class="participant-form">
                        <div class="form-row">
                            <div class="form-group">
                                <label>–ò–º—è:</label>
                                <InputText @bind-Value="_newParticipant.Name" placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞" class="form-input" />
                            </div>
                            <div class="form-group">
                                <label>–®–∏—Ä–æ—Ç–∞:</label>
                                <InputNumber @bind-Value="_newParticipant.Latitude" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä 55.7558" step="0.0001" class="form-input" />
                            </div>
                            <div class="form-group">
                                <label>–î–æ–ª–≥–æ—Ç–∞:</label>
                                <InputNumber @bind-Value="_newParticipant.Longitude" placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä 37.6173" step="0.0001" class="form-input" />
                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="button" class="btn btn-success" @onclick="AddParticipantAsync" disabled="@_isAddingParticipant">
                                @if (_isAddingParticipant) { <span>‚è≥ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...</span> } else { <span>‚úÖ –î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞</span> }
                            </button>
                            <button type="button" class="btn btn-secondary" @onclick="ClearParticipantForm">üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å</button>
                            <button type="button" class="btn btn-info" @onclick="CenterOnFormCoordinates">üéØ –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å</button>
                        </div>
                    </div>

                    <div class="border-top pt-3 mt-3">
                        <h6 class="text-white mb-2">‚ö° –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ:</h6>
                        <div class="d-flex flex-wrap gap-2">
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–ú–æ—Å–∫–≤–∞", 55.7558, 37.6173))">üèõÔ∏è –ú–æ—Å–∫–≤–∞</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–°–ü–±", 59.9343, 30.3351))">üèõÔ∏è –°–ü–±</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", 55.0084, 82.9357))">üèõÔ∏è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥", 56.8389, 60.6057))">üèõÔ∏è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–ö–∞–∑–∞–Ω—å", 55.7961, 49.1064))">üèõÔ∏è –ö–∞–∑–∞–Ω—å</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="@(() => AddQuickParticipantAsync("–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä", 45.0355, 38.9753))">üèõÔ∏è –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä</button>
                            <button class="btn btn-sm btn-outline-info" @onclick="() => AddRandomParticipantAsync()">üé≤ –°–ª—É—á–∞–π–Ω—ã–π</button>
                        </div>
                    </div>


                </div>
            }

            @if (!string.IsNullOrEmpty(_operationMessage))
            {
                <div class="alert @(string.IsNullOrEmpty(_operationError) ? "alert-success" : "alert-danger") mt-3">
                    @if (string.IsNullOrEmpty(_operationError)) { <span>‚úÖ @_operationMessage</span> } else { <span>‚ùå @_operationMessage</span> }
                </div>
            }
        </div>
    }

    <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö -->
    @if (_isInitialized && ShowParticipantInfo && _selectedParticipant != null)
    {
        <div class="participant-info-panel">
            <div class="participant-info-header">
                <h4>@_selectedParticipant.Name</h4>
                <button class="close-button" @onclick="CloseParticipantInfo">√ó</button>
            </div>
            <div class="participant-info-content">
                <div class="participant-detail">
                    <strong>–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</strong>
                    <span>@_selectedParticipant.City, @_selectedParticipant.Country</span>
                </div>
                <div class="participant-detail">
                    <strong>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong>
                    <span>@(_selectedParticipant.Latitude?.ToString("F4") ?? "N/A"), @(_selectedParticipant.Longitude?.ToString("F4") ?? "N/A")</span>
                </div>
                @if (!string.IsNullOrEmpty(_selectedParticipant.Message))
                {
                    <div class="participant-detail">
                        <strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong>
                        <span>@_selectedParticipant.Message</span>
                    </div>
                }
                <div class="participant-detail">
                    <strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong>
                    <span>@_selectedParticipant.RegisteredAt.ToString("g")</span>
                </div>
            </div>
        </div>
    }
</div>

